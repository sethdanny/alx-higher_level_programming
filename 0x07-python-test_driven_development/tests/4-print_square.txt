# Test with python3 -m doctest -v tests/4-print_square.txt

#Import your print_sqaure module
>>> print_square = __import__('4-print_square').print_square

SUCCESS CASE:
Test Case 1: positive case with size 4
>>> print_square(4)
####
####
####
####

# Test case 2: Positive case with size 10
>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########

Test case 3: positive case with size 1
>>> print_square(1)
#

FAILURE CASES:
Test Case 4: negative size (should raise an exception)
Traceback (most recent call last):
    ...
ValueError: size must be >= 0

Test case 5: float size and less than 0 (should raise an exception)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

Test case 6: size not being an integer
>>> print_square("nadduli")
Traceback (most recent call last):
    ...
TypeError: size must be an integer


Test case 7: size is None
>>> print_square(None)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

# Test case: missing one argument
>>> print_square()
Traceback (most recent call last):
    ...
TypeError: print_square() missing 1 required positional argument: 'size'


